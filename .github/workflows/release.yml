name: release tag

on:
  release:
    types: [created]

jobs:
  tag:
    runs-on: ubuntu-latest
    name: get latest tag
    outputs:
      tag: ${{ steps.doit.outputs.new }}
    steps:
      - id: doit
        run: echo "new=$(echo ${{ github.ref_name }} | cut -b 2-)" >> $GITHUB_OUTPUT

  build_img:
    needs: tag
    uses: ./.github/workflows/build_image.yml
    with:
      build-tag: ${{ needs.tag.outputs.tag }}
      cache-from: type=registry,ref=ghcr.io/${{ github.repository }}-builder-cache:latest

  tests:
    needs: [tag, build_img]
    uses: ./.github/workflows/run_tests.yml
    with:
      build-tag: ${{ needs.tag.outputs.tag }}

  testscleanup:
    needs: [tag, tests]
    uses: ./.github/workflows/test_cleanup.yml

  push:
    needs: [tag, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: dev/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.run_number }},ghcr.io/${{ github.repository }}:${{ needs.tag.outputs.tag }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}-builder-cache:latest
            type=registry,ref=ghcr.io/${{ github.repository }}-builder-cache:${{ needs.tag.outputs.tag }}-amd64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}-builder-cache:latest,mode=max
